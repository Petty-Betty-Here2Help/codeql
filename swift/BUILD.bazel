load(
    "//misc/bazel:pkg.bzl",
    "codeql_pack",
    "codeql_pkg_filegroup",
    "codeql_pkg_files",
    "codeql_pkg_runfiles",
    "codeql_pkg_wrap",
)

filegroup(
    name = "schema",
    srcs = ["schema.py"],
    visibility = ["//swift:__subpackages__"],
)

filegroup(
    name = "schema_includes",
    srcs = glob(["*.dbscheme"]),
    visibility = ["//swift:__subpackages__"],
)

filegroup(
    name = "codegen_conf",
    srcs = ["codegen.conf"],
    visibility = ["//swift:__subpackages__"],
)

codeql_pkg_files(
    name = "dbscheme_files",
    srcs = [
        "ql/lib/swift.dbscheme.stats",
        "//swift/extractor/trap:generated_dbscheme",
    ],
)

codeql_pkg_files(
    name = "manifest",
    srcs = ["codeql-extractor.yml"],
)

codeql_pkg_filegroup(
    name = "extractor",
    srcs = ["//swift/extractor:pkg"],
    prefix = "tools",
)

codeql_pkg_files(
    name = "autobuilder-incompatible-os",
    arch_specific = True,
    exes = ["//swift/tools/diagnostics:autobuilder-incompatible-os"],
    prefix = "tools",
)

codeql_pkg_runfiles(
    name = "autobuilder",
    arch_specific = True,
    exes = ["//swift/swift-autobuilder"],
    prefix = "tools",
)

codeql_pkg_wrap(
    name = "resource-dir",
    srcs = ["//swift/third_party/swift-llvm-support:swift-resource-dir"],
    arch_specific = True,
    prefix = "resource-dir",
)

codeql_pack(
    name = "swift",
    srcs = [
        ":dbscheme_files",
        ":manifest",
        "//swift/downgrades",
        "//swift/tools",
    ],
    srcs_select = {
        "@platforms//os:macos": [
            ":extractor",
            ":resource-dir",
            ":autobuilder",
        ],
        "@platforms//os:linux": [
            ":extractor",
            ":resource-dir",
            ":autobuilder-incompatible-os",
        ],
        "@platforms//os:windows": [
            ":autobuilder-incompatible-os",
        ],
    },
    visibility = ["//visibility:public"],
)

alias(
    name = "create-extractor-pack",
    actual = ":swift-installer",
)

# TODO: aliases for internal repo backward compatibility
alias(
    name = "extractor-pack-generic",
    actual = "swift-generic",
    visibility = ["//visibility:public"],
)

alias(
    name = "extractor-pack-arch",
    actual = "swift-arch",
    visibility = ["//visibility:public"],
)
